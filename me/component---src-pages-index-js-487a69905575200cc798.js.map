{"version":3,"file":"component---src-pages-index-js-487a69905575200cc798.js","mappings":"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","sources":["webpack://rick-srick/./src/components/cards/projectcard.js","webpack://rick-srick/./src/components/projcabaret.js","webpack://rick-srick/./src/components/cards/gamecard.js","webpack://rick-srick/./src/components/gamecabaret.js","webpack://rick-srick/./src/pages/index.js","webpack://rick-srick/./src/images/project-link.svg"],"sourcesContent":["import * as React from 'react'\nimport Icon from \"../../images/project-link.svg\";\nimport { useState, useEffect } from 'react';\n\nfunction language(l) {\n    \n    if(l === undefined) return undefined;\n\n    switch(l){\n        case 'c++': return 'cpp';\n        case 'c#' : return 'cs';\n        default: return l;\n    }\n}\n\nconst dummy = {\n  \"title\": \"Sample Title\",\n  \"badge\": `my-cs-badge`,\n  \"lang\": \"c#\",\n  \"year\": \"2020\",\n  \"description\": \"A short description about code\",\n  \"url\": \"me/\"\n}\n\nconst ProjectCard = ({projectTitle, year, most_used_language, description, url}) => {\n\n    const [data , setData] = useState(dummy);\n\n    useEffect(() => {\n      setData({\n        \"title\": projectTitle,\n        \"badge\": `my-${language(most_used_language?.toLowerCase())}-badge`,\n        \"lang\": most_used_language,\n        \"year\": year,\n        \"description\": description,\n        \"url\": url\n      })\n    }, [projectTitle, year, most_used_language, description, url]);\n\n    return (\n        <div className=\"col\">\n          <div className=\"card h-100\">\n            <div className=\"card-body\">\n\n              <div className='d-flex justify-content-between mb-4'>\n                <span>{data.year}</span>\n                <span className={`badge ${data.badge}`}>{data.lang}</span>\n              </div>\n\n              <p style={{fontSize: 1.25 + \"rem\", marginBottom: 0.5 + \"rem\", lineHeight: 1.2}} className=\"card-title\"><b>{data.title}</b></p>\n              <p className=\"card-text\">{data.description}</p>\n            </div>\n            <div className=\"card-footer\">\n              <a aria-label='access site' href={data.url} className=\"btn btn-primary my-second-button prog-button align-content-center\" type=\"button\">\n                <div style={{display: 'flex', alignItems: 'center', height: 100 + '%'}}>\n                  <div style={{marginRight: 10 + \"px\"}}>Page</div><Icon/></div></a>\n            </div>\n          </div>\n        </div>\n    )\n\n}\n\nexport default ProjectCard","import * as React from 'react'\nimport { useState, useEffect } from 'react';\nimport ProjectCard from './cards/projectcard'\nimport JSONData from \"../../content/github_project.json\"\n\nconst bannedRepoID = [\n    475058137,\n    452007496,\n]\n\n\nconst ProjectCabaret  = ({number}) => {\n\n    const [repos , setRepos] = useState(null);\n  \n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(`https://api.github.com/users/ricksrick/repos`);\n            const newData = await response.json();\n            \n            if(newData[\"message\"] === undefined)\n                setRepos(newData);\n            else \n                setRepos(null);\n        };\n        fetchData();\n    }, []);\n\n    const source = (repos !== null) ? repos : JSONData;\n\n    let data = source.sort((a, b) => (new Date(a.updated_at).getFullYear()) < (new Date(b.updated_at).getFullYear()) ? 1 : -1)\n               .filter(item => bannedRepoID.indexOf(item.id) <= -1)\n               .slice(0, number);\n\n    return (\n        <>\n        {\n            \n            data.map((repo) => (\n                <ProjectCard  \n                    key={repo.id}\n                    year={(new Date(repo.updated_at).getFullYear())} \n                    projectTitle={repo.name} \n                    description={repo.description} \n                    most_used_language={repo.language} \n                    url={repo.html_url}/>\n            ))\n        }\n        </>\n    );\n\n}\n\nexport default ProjectCabaret","import * as React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst GameCard = ({image, url}) => {\n\n    return (\n        <a href={url} aria-label={url}>\n            <div className=\"col\">\n                <div className=\"card gamecard\">      \n                    <GatsbyImage \n                        image = {image} \n                        alt=\"\"\n                    />\n                </div>\n            </div>\n        </a>\n    )\n}\n\nexport default GameCard","import * as React from 'react'\nimport GameCard from './cards/gamecard'\nimport { graphql, useStaticQuery } from 'gatsby'\n\n\n\nconst GameCabaret  = () => {\n\n    function getUrl(game) {\n\n        if(game.node.original.src.includes(\"Sword\"))\n            return \"https://ricksrick.itch.io/get-my-sword\";\n        if(game.node.original.src.includes(\"gun\")) \n            return \"https://ricksrick.itch.io/glitchgun\";\n        return \"\";\n    }\n\n    const data = useStaticQuery(graphql`\n        query MyQuery {\n            allImageSharp {\n                edges {\n                node {\n                    original {\n                    src\n                    }\n                    gatsbyImageData\n                    id\n                }\n                }\n            }\n        }\n    `)\n\n    const games = data.allImageSharp.edges.filter((a) => {\n        return a.node.original.src.includes(\"Cover\")});\n\n\n    return (\n        <>\n        {\n            games.map((game) => (                \n                <GameCard \n                    key={game.node.id}\n                    image={game.node.gatsbyImageData}\n                    url = {getUrl(game)}\n                />\n            ))\n        }        \n        </>\n    );\n}\n\nexport default GameCabaret","// Step 1: Import React\nimport * as React from 'react'\nimport Layout from '../components/layout'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport  Seo from '../components/seo'\nimport ProjectCabaret from '../components/projcabaret'\nimport GameCabaret from '../components/gamecabaret'\nimport { useState, useEffect } from 'react';\n\n\n// Step 2: Define your component\nconst IndexPage = () => {\n\n  const [emoji , setEmoji] = useState(null);\n\n  useEffect(() => {\n    const emoji = [\"😎\", \"👑\", \"🎓\", \"📚\", \"🗿\", \"🇮🇹\", \"📈\"];\n    setEmoji(emoji[Math.floor(Math.random() * emoji.length)])\n  }, []);\n\n  return (\n    <Layout> \n  \n\n      <div className='d-flex justify-content-center'>\n        <div className='d-flex align-items-center container-fluid row justify-content-between introsito' style={{padding: 0+ \"px\"}}>\n          <div className=\"d-flex col-12 col-sm-6 order-sm-last justify-content-sm-end justify-content-center\">\n            <StaticImage alt='logo' src='../images/icon.webp' className='fimage'/>\n          </div>\n          <div className=\"col-12 col-sm-6 order-sm-first mt-4\">\n            <div className='justify-content-sm-between'>\n              <h2><b>I'm Rick {emoji},</b></h2>\n              <p>This is my own little web garden 🌱 .<br/> Software developer and book lover. I would need two lives to satisfy my curiosity </p>\n              <div className=\"d-grid d-sm-flex gap-2 d-md-block mx-auto\">\n                <a href={\"https://ricksrick.github.io/\"} className=\"btn btn-primary me-md-2 my-first-button\" type=\"button\">Quiz Basi di Dati</a>\n                <a href={\"https://ricksrick.itch.io/\"} className=\"btn btn-primary my-second-button\" type=\"button\">My itch.io</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex justify-content-between mb-4'>\n        <p className='cabaret-title'><b>Projects</b></p>\n        <a href={\"https://github.com/RickSrick?tab=repositories\"} className=\"btn btn-primary my-first-button\" type=\"button\">View All</a>\n      </div>\n\n      <div className=\"row row-cols-1 row-cols-md-3 row-cols-sm-2 g-4\">\n        { <ProjectCabaret number={6}/> }\n      </div>\n\n      <div className='d-flex justify-content-between mt-4 mb-4'>\n        <p className='cabaret-title'><b>Games</b></p>\n        <a href={\"https://ricksrick.itch.io/\"} className=\"btn btn-primary my-first-button\" type=\"button\">View All</a>\n      </div>\n\n      <div className=\"row justify-content-center row-cols-1 row-cols-md-3 row-cols-sm-2 g-4\">\n        { <GameCabaret/> }\n      </div>\n\n    </Layout>\n  )\n}\n\nexport const Head = () => (\n  <>\n    <html lang=\"en\" />\n    <Seo title=\"Home Page\"/>\n    <meta name=\"description\" content=\"Personal site used as a portfolio in tech projects and videogame development\"/>\n  </>\n)\n\nexport default IndexPage","var React = require('react');\n\nfunction ProjectLink (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0z\",\"key\":1})]);\n}\n\nProjectLink.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"className\":\"bi bi-box-arrow-up-right\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ProjectLink;\n\nProjectLink.default = ProjectLink;\n"],"names":["language","l","undefined","dummy","_ref","projectTitle","year","most_used_language","description","url","data","setData","useState","useEffect","toLowerCase","React","className","badge","lang","style","fontSize","marginBottom","lineHeight","title","href","type","display","alignItems","height","marginRight","Icon","bannedRepoID","number","repos","setRepos","async","response","fetch","newData","json","fetchData","JSONData","sort","a","b","Date","updated_at","getFullYear","filter","item","indexOf","id","slice","map","repo","ProjectCard","key","name","html_url","image","GatsbyImage","alt","GameCabaret","getUrl","game","node","original","src","includes","games","useStaticQuery","allImageSharp","edges","GameCard","gatsbyImageData","Head","Seo","content","IndexPage","emoji","setEmoji","Math","floor","random","length","Layout","padding","StaticImage","__imageData","require","ProjectCabaret","ProjectLink","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}