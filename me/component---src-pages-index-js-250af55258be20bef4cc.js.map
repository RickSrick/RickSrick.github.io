{"version":3,"file":"component---src-pages-index-js-250af55258be20bef4cc.js","mappings":"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","sources":["webpack://rick-srick/./src/components/projectcard.js","webpack://rick-srick/./src/components/projcabaret.js","webpack://rick-srick/./src/pages/index.js","webpack://rick-srick/./src/images/project-link.svg"],"sourcesContent":["import * as React from 'react'\nimport Icon from \"../images/project-link.svg\";\n\nfunction language(l) {\n    \n    if(l === undefined) return undefined;\n\n    switch(l){\n        case 'c++': return 'cpp';\n        case 'c#' : return 'cs';\n        default: return l;\n    }\n}\n\n\nconst ProjectCard = ({projectTitle, year, most_used_language, description, url}) => {\n\n    return (\n        <div className=\"col\">\n          <div className=\"card h-100\">\n            <div className=\"card-body\">\n\n              <div className='d-flex justify-content-between mb-4'>\n                <span>{year}</span>\n                <span className={`badge my-${language(most_used_language?.toLowerCase())}-badge`}>{most_used_language}</span>\n              </div>\n\n              <h5 className=\"card-title\"><b>{projectTitle}</b></h5>\n              <p className=\"card-text\">{description}</p>\n            </div>\n            <div className=\"card-footer\">\n              <a aria-label='access site' href={url} className=\"btn btn-primary my-second-button prog-button align-content-center\" type=\"button\"><div Style={'display: flex; align-items: center; height: 100%;'}><div Style={'margin-right:10px'}>Page</div><Icon/></div></a>\n            </div>\n          </div>\n        </div>\n    )\n\n}\n\nexport default ProjectCard","import * as React from 'react'\nimport { useState, useEffect } from 'react';\nimport ProjectCard from './projectcard'\nimport JSONData from \"../../content/github_project.json\"\n\nconst bannedRepoID = [\n    475058137,\n    452007496,\n]\n\n\nconst ProjectCabaret  = ({number}) => {\n\n    const [repos , setRepos] = useState(null);\n  \n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(`https://api.github.com/users/ricksrick/repos`);\n            const newData = await response.json();\n            \n            if(newData[\"message\"] === undefined)\n                setRepos(newData);\n            else \n                setRepos(null);\n        };\n        \n        fetchData();\n    });\n\n\n    console.log(repos)\n    if (repos !== null) {\n        \n        let data = repos.sort((a, b) => (new Date(a.updated_at).getFullYear()) < (new Date(b.updated_at).getFullYear()) ? 1 : -1)\n                        .filter(item => bannedRepoID.indexOf(item.id) <= -1)\n                        .slice(0, number)\n        \n        return (\n            <>\n            {\n                \n                data.map((repo) => (\n                    <ProjectCard  \n                        year={(new Date(repo.updated_at).getFullYear())} \n                        projectTitle={repo.name} \n                        description={repo.description} \n                        most_used_language={repo.language} \n                        url={repo.html_url}/>\n                ))\n            }\n            </>\n        );\n    }\n    else {\n\n        let data = JSONData.sort((a, b) => (new Date(a.updated_at).getFullYear()) < (new Date(b.updated_at).getFullYear()) ? 1 : -1)\n                        .filter(item => bannedRepoID.indexOf(item.id) <= -1)\n                        .slice(0, number)\n\n        return (\n            <>\n            {\n                \n                data.map((repo) => (\n                    <ProjectCard  \n                        year={(new Date(repo.updated_at).getFullYear())} \n                        projectTitle={repo.name} \n                        description={repo.description} \n                        most_used_language={repo.language} \n                        url={repo.html_url}/>\n                ))\n            }\n            </>\n        );\n    }\n\n}\n\nexport default ProjectCabaret","// Step 1: Import React\nimport * as React from 'react'\nimport Layout from '../components/layout'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport  Seo from '../components/seo'\nimport ProjectCabaret from '../components/projcabaret'\n\nfunction randomEmoji () {\n\n  const emoji = [\"ðŸ˜Ž\", \"ðŸ‘‘\", \"ðŸŽ“\", \"ðŸ“š\", \"ðŸ—¿\", \"ðŸ‡®ðŸ‡¹\", \"ðŸ“ˆ\"];\n  return emoji[Math.floor(Math.random() * emoji.length)];\n\n}\n\n// Step 2: Define your component\nconst IndexPage = () => {\n\n  return (\n    <Layout pageTitle=\"Home Page\">\n\n      <div className='d-flex justify-content-center'>\n      <div className='d-flex align-items-center container-fluid row justify-content-between introsito' style={{padding: 0+ \"px\"}}>\n        <div className=\"d-flex col-12 col-sm-6 order-sm-last justify-content-sm-end justify-content-center\">\n          <StaticImage alt='logo' src='../images/icon.png' className='fimage'/>\n        </div>\n        <div className=\"col-12 col-sm-6 order-sm-first mt-4\">\n          <div className='justify-content-sm-between'>\n            <h2><b>I'm Rick {randomEmoji()},</b></h2>\n            <p>This is my little personal web garden ðŸŒ±. <br/>Software Developer and Book lover. I need two life to fill my curiousity </p>\n            <div className=\"d-grid d-sm-flex gap-2 d-md-block mx-auto\">\n              <Link to={\"https://ricksrick.github.io/\"} className=\"btn btn-primary me-md-2 my-first-button\" type=\"button\">Quiz Basi di Dati</Link>\n              <Link to={\"https://ricksrick.itch.io/\"} className=\"btn btn-primary my-second-button\" type=\"button\">My itch.io</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n\n      <div className='d-flex justify-content-between mb-4'>\n        <h5><b>Projects</b></h5>\n        <a href={\"https://github.com/RickSrick?tab=repositories\"} className=\"btn btn-primary my-first-button\" type=\"button\">View All</a>\n      </div>\n\n      <div className=\"row row-cols-1 row-cols-md-3 row-cols-sm-2 g-4 mb-5\">\n        { <ProjectCabaret number={6}/> }\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = () => (\n  <>\n    <html lang=\"en\" />\n    <Seo title=\"Home Page\"/>\n    <meta name=\"description\" content=\"Personal site used as a portfolio in tech projects and videogame development\"/>\n  </>\n)\n\nexport default IndexPage","var React = require('react');\n\nfunction ProjectLink (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0z\",\"key\":1})]);\n}\n\nProjectLink.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"className\":\"bi bi-box-arrow-up-right\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ProjectLink;\n\nProjectLink.default = ProjectLink;\n"],"names":["language","l","undefined","_ref","projectTitle","year","most_used_language","description","url","React","className","toLowerCase","href","type","Style","Icon","bannedRepoID","number","repos","setRepos","useState","useEffect","async","response","fetch","newData","json","fetchData","console","log","data","sort","a","b","Date","updated_at","getFullYear","filter","item","indexOf","id","slice","map","repo","ProjectCard","name","html_url","JSONData","Head","lang","Seo","title","content","IndexPage","Layout","pageTitle","style","padding","StaticImage","alt","src","__imageData","require","emoji","Math","floor","random","length","randomEmoji","Link","to","ProjectCabaret","ProjectLink","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}